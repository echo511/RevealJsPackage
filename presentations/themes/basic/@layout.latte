<!doctype html>
<html lang="en">
	<head>
		<meta charset="utf-8">

		<title>{block #title}reveal.js - The HTML Presentation Framework{/block}</title>

		{ifset #description}
		<meta name="description" content="{include #description}">
		{/ifset}

		{ifset #author}
		<meta name="author" content="{include #author}">
		{/ifset}

		<meta name="apple-mobile-web-app-capable" content="yes" />
		<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />

		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

		{block #css}
			<link rel="stylesheet" href="{!$basePath}/reveal.js/css/reveal.min.css">
			<link rel="stylesheet" href="{!$basePath}/reveal.js/css/theme/{block #theme}default{/block}.css" id="theme">

			<!-- For syntax highlighting -->
			<link rel="stylesheet" href="{!$basePath}/reveal.js/lib/css/zenburn.css">
		{/block}

		{block #head_scripts}
			<!-- If the query includes 'print-pdf', use the PDF print sheet -->
			<script>
				document.write( '<link rel="stylesheet" href="{!$basePath}/reveal.js/css/print/' + ( window.location.search.match( /print-pdf/gi ) ? 'pdf' : 'paper' ) + '.css" type="text/css" media="print">' );
			</script>

			<!--[if lt IE 9]>
			<script src="{!$basePath}/reveal.js/lib/js/html5shiv.js"></script>
			<![endif]-->
		{/block}
	</head>
	<body>
		<div class="reveal">
			<div class="slides">
				{include #slides}
			</div>
		<div>

		{block #scripts}
			<script src="{!$basePath}/reveal.js/lib/js/head.min.js"></script>
			<script src="{!$basePath}/reveal.js/js/reveal.min.js"></script>
		{/block}

		{block #revealjs_init}
			<script>
				// Full list of configuration options available here:
				// https://github.com/hakimel/reveal.js#configuration
				Reveal.initialize({
					controls: true,
					progress: true,
					history: true,
					center: true,

					theme: Reveal.getQueryHash().theme, // available themes are in /css/theme
					transition: Reveal.getQueryHash().transition || '{block #transition}cube{/block}', // default/cube/page/concave/zoom/linear/fade/none

					{if isset($multiplexId)}
					multiplex: {
						id: {$multiplexId},
						secret: {$multiplexSecret},
						url: 'revealjs.jit.su:80'
					},
					{/if}

					// Optional libraries used to extend on reveal.js
					dependencies: [
						{ src: '{!$basePath}/reveal.js/lib/js/classList.js', condition: function() { return !document.body.classList; } },
						{ src: '{!$basePath}/reveal.js/plugin/markdown/showdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
						{ src: '{!$basePath}/reveal.js/plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
						{ src: '{!$basePath}/reveal.js/plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
						{ src: '{!$basePath}/reveal.js/plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
						{ src: '{!$basePath}/reveal.js/plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } },
						// { src: '{!$basePath}/reveal.js/plugin/search/search.js', async: true, condition: function() { return !!document.body.classList; } },
						// { src: '{!$basePath}/reveal.js/plugin/remotes/remotes.js', async: true, condition: function() { return !!document.body.classList; } },
				        { src: '{!$basePath}/reveal.js/socket.io.js', async: true },
				        { src: '{!$basePath}/reveal.js/plugin/multiplex/client.js', async: true },
				        { src: '{!$basePath}/reveal.js/plugin/multiplex/master.js', async: true }
					]
				});
			</script>
		{/block}
	</body>
</html>